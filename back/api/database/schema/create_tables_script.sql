-- create statements

--CREATE DATABASE Timesphere_DB

--Status for both TimeSheets and HolidayRequests
CREATE TABLE  Status (
  ID  SERIAL PRIMARY KEY,
  STATUS_TYPE TEXT NOT NULL
);
CREATE TABLE  TimeEntryType (
  ID  SERIAL PRIMARY KEY,
  ENTRY_TYPE TEXT NOT NULL
);
--Role will define the type of User stored in db
CREATE TABLE  Role (
  ID  SERIAL PRIMARY KEY,
  ROLE_TYPE TEXT NOT NULL
);

CREATE TABLE Users (
   ID  SERIAL PRIMARY KEY,
   FIRSTNAME TEXT NOT NULL,
   LASTNAME TEXT NOT NULL,
   EMAIL TEXT NOT NULL
);
-- Table storing Consultant Specific Details
CREATE TABLE  Consultants (
     ID INT PRIMARY KEY,
     CONTRACTED_HOURS DECIMAL NOT NULL,
     MANAGER INT NOT NULL,
     FOREIGN KEY (ID) REFERENCES Users(ID),
     FOREIGN KEY (MANAGER) REFERENCES Users(ID)
);

-- Weekly Timesheets
CREATE TABLE  Timesheets (
  ID SERIAL PRIMARY KEY,
  WEEK_COMMENCING date NOT NULL,
  CONSULTANT INT NOT NULL,
  STATUS INT NOT NULL,
  FOREIGN KEY (CONSULTANT) REFERENCES Consultants(ID),
  FOREIGN KEY (STATUS) REFERENCES Status(ID)
);
CREATE TABLE  TimeEntries (
  START_TIME TIMESTAMP NOT NULL,
  END_TIME TIMESTAMP NOT NULL,
  TIMESHEET INT NOT NULL,
  ENTRY_TYPE INT NOT NULL,
  PRIMARY KEY (TIMESHEET, START_TIME),
  FOREIGN KEY (TIMESHEET) REFERENCES Timesheets(ID),
  FOREIGN KEY (ENTRY_TYPE) REFERENCES TimeEntryType(ID)
);
CREATE TABLE  Holidays(
  ID SERIAL PRIMARY KEY,
  START_DATE date NOT NULL,
  END_DATE date NOT NULL,
  CONSULTANT INT NOT NULL,
  STATUS INT NOT NULL,
  FOREIGN KEY (CONSULTANT) REFERENCES Consultants(ID),
  FOREIGN KEY (STATUS) REFERENCES Status(ID)
);

